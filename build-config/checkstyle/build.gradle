/*
 * Copyright (c) 2024, WSO2 Inc. (http://www.wso2.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import groovy.xml.XmlParser
import groovy.xml.XmlUtil

plugins {
    id "de.undercouch.download"
}

apply plugin: 'java'

// Task to download the Checkstyle rule files
task downloadCheckstyleRuleFiles(type: Download) {
    src([
            'https://raw.githubusercontent.com/wso2/code-quality-tools/v1.4/checkstyle/jdk-17/checkstyle.xml',
            'https://raw.githubusercontent.com/wso2/code-quality-tools/v1.4/checkstyle/jdk-17/suppressions.xml'
    ])
    overwrite false
    onlyIfNewer true
    dest buildDir
}

// Task to remove <module name="StaticVariableName">
task modifyCheckstyleConfig {
    dependsOn downloadCheckstyleRuleFiles
//    doLast {
//        File checkstyleFile = file("$project.buildDir/checkstyle.xml")
//        if (checkstyleFile.exists()) {
//            // Parse the checkstyle.xml file
//            def xml = new XmlParser().parse(checkstyleFile)
//
//            // Find and remove <module name="StaticVariableName">
//            xml.module.findAll { it.'@name' == 'StaticVariableName' }.each { staticVariableModule ->
//                xml.remove(staticVariableModule)
//            }
//
//            // Write the updated XML back to the file
//            checkstyleFile.text = XmlUtil.serialize(xml)
//        } else {
//            throw new GradleException("Checkstyle file not found at $checkstyleFile")
//        }
//    }
}

// Disable jar task
jar {
    enabled = false
}

// Disable clean task
clean {
    enabled = false
}

// Add modified checkstyle.xml and suppressions.xml as artifacts
artifacts.add('default', file("$project.buildDir/checkstyle.xml")) {
    builtBy('modifyCheckstyleConfig')
}

artifacts.add('default', file("$project.buildDir/suppressions.xml")) {
    builtBy('downloadCheckstyleRuleFiles')
}
